# ---------------------------------------------------------------------------
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ---------------------------------------------------------------------------

name: tests

on:
  push:
    branches:
      - github-action-e2e

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        persist-credentials: false
        submodules: recursive

    - name: Infra Java
      uses: ./.github/actions/infra-java
    - name: Infra Minikube
      uses: ./.github/actions/infra-minikube

    - name: Run Tests
      continue-on-error: true
      shell: bash
      run: |
        echo "config minikube ?"
        eval $(minikube docker-env)
        echo "Running camel kubernetes command"
        make clean CAMEL_CMD=camel

        echo "Running smoke test on quarkus"
        pushd quarkus/timer-log
        camel kubernetes export timer-log-route.yaml \
          --gav=examples:timer-log:1.0.0 \
          --trait container.image-pull-policy=IfNotPresent \
          --trait service.type=NodePort \
          --runtime=quarkus \
          --build-property=quarkus.kubernetes.image-pull-policy=Never \
          --image-registry $INSTALL_REGISTRY
        ./mvnw clean package
        kubectl apply -f ./target/kubernetes/kubernetes.yml
        kubectl wait --for=condition=ready --timeout=90s pod -l app.kubernetes.io/name=timer-log
        kubectl logs -l app.kubernetes.io/name=timer-log | grep -c -Ei "Hello Camel from route1"
        kubectl delete --all -f ./target/kubernetes/kubernetes.yml
        kubectl wait --for=delete --timeout=90s pod -l app.kubernetes.io/name=timer-log
        popd

    - name: Dump
      shell: bash
      run: |
        echo "Dump state"
        echo "Registry IP $INSTALL_REGISTRY"
        docker images
        kubectl get pods -o yaml
        kubectl get deployments -o yaml
        kubectl describe pod -l app.kubernetes.io/name=timer-log